name: Deploy 

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Remove previously built Docker image
        run: |
          docker image rm gcr.io/${{ secrets.GCP_PROJECT_ID }}/fullstack-bhatn:latest || true


      - name: Build Docker image
        run: |
          docker build \
            --platform linux/amd64 \
            --build-arg PORT=${{ secrets.PORT }} \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --no-cache \
            -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fullstack-bhatn:latest \
            backend
            
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
          service: fullstack-bhatn
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/fullstack-bhatn:latest
          region: europe-west1
          platform: managed
          allow-unauthenticated: true

      - name: Allow unauthenticated access
        run: |
          gcloud run services add-iam-policy-binding fullstack-bhatn \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --region=europe-west1 \
            --platform=managed

      - name: Wait for server to be ready
        run: sleep 10

      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps
          
      - name: Run Lint
        run: |
          cd frontend
          npm run lint
 
      - name: Build Next.js app
        run: |
          cd frontend
          npm run build --legacy-peer-deps

      - name: Install specific vercel version
        run: npm install -g vercel@39.0.5
 
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend
          npx vercel deploy --prod --token $VERCEL_TOKEN --confirm