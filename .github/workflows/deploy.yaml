name: Deploy

on:
  push:
    branches:
      - gitHub-actions-bhatn
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19' # Use your preferred Node version

      - name: Check the current directory
        run: pwd 

      - name: List the files in the current directory
        run: ls

      - name: Navigate to project directory
        run: cd backend
      
      - name: Install dependencies
        run: |
          ls
          pwd
          cd backend
          pwd
          npm install --legacy-peer-deps

      - name: Start the server (if applicable)
        run: |
          cd backend
          npm start &
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          nodemailer_email: ${{ secrets.nodemailer_email }}
          nodemailer_password: ${{ secrets.nodemailer_password }}
          PORT: ${{ secrets.PORT  }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }} 

      - name: Trigger Render Deployment
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          # Define the Render API endpoint and service ID
          SERVICE_ID=srv-cstke5pu0jms73aqaj6g # Replace this with your actual Service ID
          RENDER_API_URL="https://api.render.com/v1/services/srv-cstke5pu0jms73aqaj6g/deploys"
          # Trigger the deployment using Render's API
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            $RENDER_API_URL


      - name: Wait for server to be ready
        run: sleep 10

      - name: Check server health
        run: curl https://fullstack-bhatn.onrender.com

 
      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps
 
      - name: Run Lint
        run: |
          cd frontend
          npm run lint
 
      - name: Build Next.js app
        run: |
          cd frontend
          npm run build
 
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend
          npx vercel deploy --prod --token $VERCEL_TOKEN --confirm